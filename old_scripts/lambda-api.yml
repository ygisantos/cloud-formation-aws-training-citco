AWSTemplateFormatVersion: 2010-09-09
Description: "Lambda API Gateway Example"
 
Parameters:
  restApiName:
    Type: "String"
    Description: "The name of our REST API"
    Default: "restApiSampleCfn"

  lambdaS3Bucket:
    Description: "S3 bucket of the lambda function"
    Type: "String"
    Default: "ysm-trn-cfn-scripts"

  # HELLO LAMBDA PARAMS
  helloFunctionName:
    Description: "Name of the Lambda Hello Function"
    Type: "String"
    Default: "fnLambdaHelloCfn"
  helloLambdaZipFile:
    Description: "Zip file path of the hello lambda function in S3"
    Type: "String"
    Default: "lambda_hello.zip"
  helloLambdaHandler:
    Description: "Handler of the hello lambda function"
    Type: "String"
    Default: "lambda_hello.handler"

Resources: 
  restApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: "Sample Rest API using CFN"
      Name: !Ref restApiName

  restApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt restApi.RootResourceId
      PathPart: "hello" # endpoint url
      RestApiId: !Ref restApi

  helloRestMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: "NONE"
      HttpMethod: "GET"
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: "POST" # ALWAYS POST
        Uri: !Join [
          "", 
          [ 
            "arn:aws:apigateway:",
            !Ref "AWS::Region", 
            ":lambda:path/2015-03-31/functions/", 
            !GetAtt helloLambda.Arn, # ETO LANG IIBAHIN
            "/invocations"
          ] 
        ]
        IntegrationResponses: # di required
          - StatusCode: 200
            ResponseTemplates:
              application/json: Empty
      ResourceId: !Ref restApiResource
      RestApiId: !Ref restApi

  helloLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref lambdaS3Bucket
        S3Key: !Join ["/", ["lambda", !Ref helloLambdaZipFile]]
      Description: "Sample Lambda Hello API using CFN"
      FunctionName: !Ref helloFunctionName
      Handler: !Ref helloLambdaHandler
      Role: !GetAtt HelloLambdaFunctionRole.Arn
      Runtime: "python3.12"
      Timeout: 60

  HelloLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Join [" ", ["IAM Role for ", !Ref helloFunctionName, " lambda function"]]
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"           
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      RoleName: !Join ["-", [!Ref helloFunctionName, "lambda", "role"]]
      Policies:
        - PolicyName: !Join ["-", [!Ref helloFunctionName, "execution", "policy"]]
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "logs:CreateLogGroup"
                Resource: 
                  - "arn:aws:logs:*:*:*"    
              - Effect: Allow
                Action: 
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: 
                  - !Join ["", ["arn:aws:logs:*:*:log-group:/aws/lambda/", !Ref helloFunctionName, ":*"]]  

  apiLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref helloLambda
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Join [
        "", 
        [
          "arn:aws:execute-api:", 
          !Ref "AWS::Region",
          ":",
          !Ref "AWS::AccountId",
          ":",
          !Ref restApi,
          "/*"
        ] 
      ]


  restApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref restApiStageDeployment
      Description: "Dev deployment stage"
      MethodSettings: 
        - HttpMethod: "GET"
          ResourcePath: "/hello"
      RestApiId: !Ref restApi

  restApiStageDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref restApi
      StageName: "dev"

         